"""
Interfaces for Mimic.
"""

from __future__ import absolute_import, division, unicode_literals

from zope.interface import Attribute, Interface


class IAPIMock(Interface):
    """
    An :obj:`IAPIMock` provides an API via an entry in a tenant's service
    catalog.
    """

    def catalog_entries(tenant_id):  # pragma:nocover
        """
        Generate some :obj:`mimic.catalog.Entry` objects given the tenant ID.

        :param unicode tenant_id: the semi-internal tenant ID generated by
            Mimic.
        """

    def resource_for_region(region, uri_prefix,
                            session_store):  # pragma:nocover
        """
        Get a resource for the given region.
        """


class ICredential(Interface):
    """
    An :obj:`ICredential` provides identity authentication credentials.
    """
    type_key = Attribute("The type key to look for in a JSON dictionary "
                         "representing the credential.")

    def get_session(session_store):  # pragma:nocover
        """
        Get a session corresponding to the user and tenant from the given
        session store.

        :param session_store: The store of all sessions for all tenants for
            all plugins across all regions.
        :type session_store: :class:`mimic.session.SessionStore`

        :return: A session corresponding to the user and plugin data for a
            single tenant for all plugins across all regions.
        :rtype: :class:`mimic.session.SessionStore`
        """


class IAPIDomainMock(Interface):
    """
    An :obj:`IAPIDomainMock` provides an API via a root resource with a fixed
    name ahead of time.

    Top level mocks will appear as
    ``http://your-mimic-host.example:your-mimic-port/domain/<your-api>``, where
    ``<your-api>`` is the result of :obj:`IAPIDomainMock.domain```()``.
    """

    def domain():               # pragma:nocover
        """
        This should be a domain name.  For example, if you were mocking an API
        typically present at ``https://api.foo.example.com/v2/``, this should
        return ``u"api.foo.example.com"``.

        :return: the domain name for this top-level mock.
        :rtype: :obj:`six.text_type`
        """

    def resource():             # pragma:nocover
        """
        The resource which would appear at the root of the domain.  For
        example, if you were mocking an API typically present at
        ``https://api.foo.example.com/v2/``, this should return a resource
        whose ``.getChild("v2", ...)`` returns the root of the API.

        :return: The resource for the root of the API implemented by this
                 :obj:`IAPIDomainMock`.
        :rtype: :obj:`twisted.web.iweb.IResource`
        """
